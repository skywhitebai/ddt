<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.ddt.dao.custom.CustomCheckOrderMapper">
    <resultMap id="listCheckOrderMap"
               type="com.sky.ddt.dto.checkOrder.response.ListCheckOrderResponse"
               extends="com.sky.ddt.dao.generate.CheckOrderMapper.BaseResultMap">
        <result column="shop_name" property="shopName"/>
        <result column="inventoryQuantityNewTotal" property="inventoryQuantityNewTotal"/>
    </resultMap>
    <select id="listCheckOrder" parameterType="com.sky.ddt.dto.checkOrder.request.ListCheckOrderRequest"
            resultMap="listCheckOrderMap">
        select
        <include refid="com.sky.ddt.dao.generate.CheckOrderMapper.Base_Column_List"/>
        ,(select s.shop_name from shop s where co.shop_id=s.shop_id) shop_name,
        ifnull((select sum(coss.inventory_quantity_new) from check_order_shop_sku coss where coss.check_order_id=co.id),0) inventoryQuantityNewTotal
        from check_order co
        <where>
            <trim prefix="(" suffix=")" prefixOverrides="and">
                <if test="shopId != null">and shop_id =#{shopId}</if>
                <if test="checkTimeStart != null ">and check_time<![CDATA[>=]]> #{checkTimeStart}</if>
                <if test="checkTimeEnd != null ">and check_time <![CDATA[<]]>
                    DATE_ADD(date(#{checkTimeEnd}),INTERVAL 1 DAY)
                </if>
                <if test="batchNumber != null and batchNumber != '' ">and batch_number like
                    concat('%',#{batchNumber},'%')
                </if>
                <if test="shopSku != null and shopSku != '' ">
                    and exists (select 1 from check_order_shop_sku coss where coss.check_order_id=co.id and
                    coss.shop_sku like concat('%',#{shopSku},'%'))
                </if>
                <if test="sku != null and sku != '' ">
                    and exists (select 1 from check_order_shop_sku coss,shop_sku ss,sku s where coss.check_order_id=co.id and
                    coss.shop_sku_id=ss.shop_sku_id and ss.sku_id=s.sku_id and s.sku like concat('%',#{sku},'%'))
                </if>
                <if test="status != null">and status=#{status}</if>
            </trim>
        </where>
        order by co.create_time desc
    </select>
    <insert id="insertShopSkuStorageLocationByCheckOrder">
       INSERT INTO `shop_sku_storage_location`(shop_sku_id,storage_location_id,create_by)
SELECT DISTINCT coss.`shop_sku_id`,cosssl.storage_location_id,#{dealUserId} FROM `check_order_shop_sku` coss,`check_order_shop_sku_storage_location` cosssl
WHERE coss.`check_order_id`=#{id} AND coss.`id`=cosssl.`check_order_shop_sku_id` AND NOT EXISTS(SELECT 1 FROM `shop_sku_storage_location` sssl WHERE sssl.shop_sku_id=coss.`shop_sku_id` AND sssl.storage_location_id=cosssl.storage_location_id )
    </insert>
    <delete id="deleteShopSkuStorageLocationByCheckOrder">
DELETE FROM shop_sku_storage_location WHERE id IN(
SELECT id FROM (
SELECT sssl.id FROM shop_sku_storage_location sssl,check_order_shop_sku coss WHERE sssl.shop_sku_id=coss.`shop_sku_id` AND coss.`check_order_id`=#{checkOrderId}
AND NOT EXISTS(SELECT 1 FROM check_order_shop_sku_storage_location cosssl WHERE cosssl.check_order_shop_sku_id=coss.`id` AND cosssl.`storage_location_id`=sssl.storage_location_id))a)
      </delete>
</mapper>