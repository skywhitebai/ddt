<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.ddt.dao.custom.CustomProduceOrderShopSkuMapper">
    <resultMap id="ListProduceOrderShopSkuMap"
               type="com.sky.ddt.dto.produceOrderShopSku.response.ListProduceOrderShopSkuResponse"
               extends="com.sky.ddt.dao.generate.ProduceOrderShopSkuMapper.BaseResultMap">
        <result column="shop_name" property="shopName"/>
        <result column="shop_sku" property="shopSku"/>
        <result column="sku" property="sku"/>
        <result column="warehousingQuantity" property="warehousingQuantity"/>
    </resultMap>

    <select id="listProduceOrderShopSku"
            parameterType="com.sky.ddt.dto.produceOrderShopSku.request.ListProduceOrderShopSkuRequest"
            resultMap="ListProduceOrderShopSkuMap">
        select poss.*
                ,
               (select s.shop_name from shop s where po.shop_id = s.shop_id) shop_name,
               ss.shop_sku
                ,
               sku.sku,
               (select sum(warehousing_quantity)
                from warehousing_order_shop_sku woss,
                     warehousing_order wo
                WHERE wo.id = woss.warehousing_order_id
                  and wo.status = 2
                  and wo.type = 1
                  and wo.produce_order_id = poss.produce_order_id
                  and woss.shop_sku_id = poss.shop_sku_id)                   warehousingQuantity
        from produce_order_shop_sku poss
                 left join produce_order po on poss.produce_order_id = po.id
                 left join shop_sku ss on poss.shop_sku_id = ss.shop_sku_id
                 left join sku on sku.sku_id = ss.sku_id
        where poss.produce_order_id = #{produceOrderId}
        order by ss.shop_sku
    </select>
    <select id="listProduceOrderShopSkuProductionQuantity"
            resultType="com.sky.ddt.dto.produceOrderShopSku.response.ListProduceOrderShopSkuProductionQuantityResponse">
        SELECT SUM(productionQuantity) productionQuantity,SUM(warehousingQuantity)
        warehousingQuantity,shopId,shopName,shopSku FROM (SELECT poss.production_quantity productionQuantity,(SELECT
        SUM(woss.warehousing_quantity) warehousingQuantity FROM warehousing_order wo,warehousing_order_shop_sku woss
        WHERE wo.produce_order_id=po.id AND wo.STATUS IN(1,2) AND wo.id=woss.`warehousing_order_id` AND
        woss.shop_sku_id=ss.shop_sku_id) warehousingQuantity,s.shop_id shopId,s.shop_name shopName,ss.shop_sku shopSku,po.production_time productionTime,po.batch_number batchNumber
        FROM
        shop_sku ss
        INNER JOIN shop s ON ss.`shop_id`=s.`shop_id` and ss.sku_id=#{skuId}
        <if test="type != null and type==0">AND s.shop_id=#{shopId}</if>
        <if test="type != null and type!=0">AND s.shop_id!=#{shopId} and s.type=#{type}</if>
        INNER JOIN produce_order po ON po.shop_id=s.shop_id AND po.status IN(1,2)
        INNER JOIN produce_order_shop_sku poss ON po.id=poss.produce_order_id AND ss.`shop_sku_id`=poss.`shop_sku_id`) t
        GROUP BY shopSku,batchNumber
    </select>
    <select id="existProduceOrderShopSkuNotSameSku"
            resultType="java.lang.Boolean">
        SELECT case count(0) when 0 then false else true end from produce_order_shop_sku poss where poss.produce_order_id=#{produceOrderId}
        <if test="id != null ">AND poss.id!=#{id}</if>
        and poss.shop_sku_id not in(select ss.shop_sku_id from shop_sku ss where ss.sku_id=(select sku_id from shop_sku ss where ss.shop_sku_id=#{shopSkuId}) )
    </select>

</mapper>