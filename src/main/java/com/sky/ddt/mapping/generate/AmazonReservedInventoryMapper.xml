<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddt.dao.generate.AmazonReservedInventoryMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddt.entity.AmazonReservedInventory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku" jdbcType="VARCHAR" property="sku" />
    <result column="fnsku" jdbcType="VARCHAR" property="fnsku" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_sku_id" jdbcType="INTEGER" property="shopSkuId" />
    <result column="asin" jdbcType="VARCHAR" property="asin" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="reserved_qty" jdbcType="INTEGER" property="reservedQty" />
    <result column="reserved_customerorders" jdbcType="INTEGER" property="reservedCustomerorders" />
    <result column="reserved_fc_transfers" jdbcType="INTEGER" property="reservedFcTransfers" />
    <result column="reserved_fc_processing" jdbcType="INTEGER" property="reservedFcProcessing" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku, fnsku, shop_id, shop_sku_id, asin, product_name, reserved_qty, reserved_customerorders, 
    reserved_fc_transfers, reserved_fc_processing, create_time, create_by, update_time, 
    update_by
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddt.entity.AmazonReservedInventoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amazon_reserved_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amazon_reserved_inventory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from amazon_reserved_inventory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddt.entity.AmazonReservedInventoryExample">
    delete from amazon_reserved_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddt.entity.AmazonReservedInventory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into amazon_reserved_inventory (sku, fnsku, shop_id, 
      shop_sku_id, asin, product_name, 
      reserved_qty, reserved_customerorders, reserved_fc_transfers, 
      reserved_fc_processing, create_time, create_by, 
      update_time, update_by)
    values (#{sku,jdbcType=VARCHAR}, #{fnsku,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, 
      #{shopSkuId,jdbcType=INTEGER}, #{asin,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{reservedQty,jdbcType=INTEGER}, #{reservedCustomerorders,jdbcType=INTEGER}, #{reservedFcTransfers,jdbcType=INTEGER}, 
      #{reservedFcProcessing,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddt.entity.AmazonReservedInventory">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into amazon_reserved_inventory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sku != null">
        sku,
      </if>
      <if test="fnsku != null">
        fnsku,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopSkuId != null">
        shop_sku_id,
      </if>
      <if test="asin != null">
        asin,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="reservedQty != null">
        reserved_qty,
      </if>
      <if test="reservedCustomerorders != null">
        reserved_customerorders,
      </if>
      <if test="reservedFcTransfers != null">
        reserved_fc_transfers,
      </if>
      <if test="reservedFcProcessing != null">
        reserved_fc_processing,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sku != null">
        #{sku,jdbcType=VARCHAR},
      </if>
      <if test="fnsku != null">
        #{fnsku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopSkuId != null">
        #{shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="asin != null">
        #{asin,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="reservedQty != null">
        #{reservedQty,jdbcType=INTEGER},
      </if>
      <if test="reservedCustomerorders != null">
        #{reservedCustomerorders,jdbcType=INTEGER},
      </if>
      <if test="reservedFcTransfers != null">
        #{reservedFcTransfers,jdbcType=INTEGER},
      </if>
      <if test="reservedFcProcessing != null">
        #{reservedFcProcessing,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddt.entity.AmazonReservedInventoryExample" resultType="java.lang.Long">
    select count(*) from amazon_reserved_inventory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update amazon_reserved_inventory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sku != null">
        sku = #{record.sku,jdbcType=VARCHAR},
      </if>
      <if test="record.fnsku != null">
        fnsku = #{record.fnsku,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopSkuId != null">
        shop_sku_id = #{record.shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="record.asin != null">
        asin = #{record.asin,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.reservedQty != null">
        reserved_qty = #{record.reservedQty,jdbcType=INTEGER},
      </if>
      <if test="record.reservedCustomerorders != null">
        reserved_customerorders = #{record.reservedCustomerorders,jdbcType=INTEGER},
      </if>
      <if test="record.reservedFcTransfers != null">
        reserved_fc_transfers = #{record.reservedFcTransfers,jdbcType=INTEGER},
      </if>
      <if test="record.reservedFcProcessing != null">
        reserved_fc_processing = #{record.reservedFcProcessing,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update amazon_reserved_inventory
    set id = #{record.id,jdbcType=INTEGER},
      sku = #{record.sku,jdbcType=VARCHAR},
      fnsku = #{record.fnsku,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_sku_id = #{record.shopSkuId,jdbcType=INTEGER},
      asin = #{record.asin,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      reserved_qty = #{record.reservedQty,jdbcType=INTEGER},
      reserved_customerorders = #{record.reservedCustomerorders,jdbcType=INTEGER},
      reserved_fc_transfers = #{record.reservedFcTransfers,jdbcType=INTEGER},
      reserved_fc_processing = #{record.reservedFcProcessing,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddt.entity.AmazonReservedInventory">
    update amazon_reserved_inventory
    <set>
      <if test="sku != null">
        sku = #{sku,jdbcType=VARCHAR},
      </if>
      <if test="fnsku != null">
        fnsku = #{fnsku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopSkuId != null">
        shop_sku_id = #{shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="asin != null">
        asin = #{asin,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="reservedQty != null">
        reserved_qty = #{reservedQty,jdbcType=INTEGER},
      </if>
      <if test="reservedCustomerorders != null">
        reserved_customerorders = #{reservedCustomerorders,jdbcType=INTEGER},
      </if>
      <if test="reservedFcTransfers != null">
        reserved_fc_transfers = #{reservedFcTransfers,jdbcType=INTEGER},
      </if>
      <if test="reservedFcProcessing != null">
        reserved_fc_processing = #{reservedFcProcessing,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddt.entity.AmazonReservedInventory">
    update amazon_reserved_inventory
    set sku = #{sku,jdbcType=VARCHAR},
      fnsku = #{fnsku,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      shop_sku_id = #{shopSkuId,jdbcType=INTEGER},
      asin = #{asin,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      reserved_qty = #{reservedQty,jdbcType=INTEGER},
      reserved_customerorders = #{reservedCustomerorders,jdbcType=INTEGER},
      reserved_fc_transfers = #{reservedFcTransfers,jdbcType=INTEGER},
      reserved_fc_processing = #{reservedFcProcessing,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>