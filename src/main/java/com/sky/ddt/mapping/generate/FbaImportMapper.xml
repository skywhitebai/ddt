<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddt.dao.generate.FbaImportMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddt.entity.FbaImport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku" jdbcType="VARCHAR" property="sku" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_sku_id" jdbcType="INTEGER" property="shopSkuId" />
    <result column="fnsku" jdbcType="VARCHAR" property="fnsku" />
    <result column="asin" jdbcType="VARCHAR" property="asin" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="conditions" jdbcType="VARCHAR" property="conditions" />
    <result column="your_price" jdbcType="DECIMAL" property="yourPrice" />
    <result column="mfn_listing_exists" jdbcType="VARCHAR" property="mfnListingExists" />
    <result column="mfn_fulfillable_quantity" jdbcType="INTEGER" property="mfnFulfillableQuantity" />
    <result column="afn_listing_exists" jdbcType="VARCHAR" property="afnListingExists" />
    <result column="afn_warehouse_quantity" jdbcType="INTEGER" property="afnWarehouseQuantity" />
    <result column="afn_fulfillable_quantity" jdbcType="INTEGER" property="afnFulfillableQuantity" />
    <result column="afn_unsellable_quantity" jdbcType="INTEGER" property="afnUnsellableQuantity" />
    <result column="afn_reserved_quantity" jdbcType="INTEGER" property="afnReservedQuantity" />
    <result column="afn_total_quantity" jdbcType="INTEGER" property="afnTotalQuantity" />
    <result column="per_unit_volume" jdbcType="INTEGER" property="perUnitVolume" />
    <result column="afn_inbound_working_quantity" jdbcType="INTEGER" property="afnInboundWorkingQuantity" />
    <result column="afn_inbound_shipped_quantity" jdbcType="INTEGER" property="afnInboundShippedQuantity" />
    <result column="afn_inbound_receiving_quantity" jdbcType="INTEGER" property="afnInboundReceivingQuantity" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku, shop_id, shop_sku_id, fnsku, asin, product_name, conditions, your_price, 
    mfn_listing_exists, mfn_fulfillable_quantity, afn_listing_exists, afn_warehouse_quantity, 
    afn_fulfillable_quantity, afn_unsellable_quantity, afn_reserved_quantity, afn_total_quantity, 
    per_unit_volume, afn_inbound_working_quantity, afn_inbound_shipped_quantity, afn_inbound_receiving_quantity, 
    remark, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddt.entity.FbaImportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fba_import
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fba_import
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fba_import
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddt.entity.FbaImportExample">
    delete from fba_import
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddt.entity.FbaImport">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fba_import (sku, shop_id, shop_sku_id, 
      fnsku, asin, product_name, 
      conditions, your_price, mfn_listing_exists, 
      mfn_fulfillable_quantity, afn_listing_exists, 
      afn_warehouse_quantity, afn_fulfillable_quantity, 
      afn_unsellable_quantity, afn_reserved_quantity, 
      afn_total_quantity, per_unit_volume, afn_inbound_working_quantity, 
      afn_inbound_shipped_quantity, afn_inbound_receiving_quantity, 
      remark, create_time, create_by, 
      update_time, update_by)
    values (#{sku,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, #{shopSkuId,jdbcType=INTEGER}, 
      #{fnsku,jdbcType=VARCHAR}, #{asin,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{conditions,jdbcType=VARCHAR}, #{yourPrice,jdbcType=DECIMAL}, #{mfnListingExists,jdbcType=VARCHAR}, 
      #{mfnFulfillableQuantity,jdbcType=INTEGER}, #{afnListingExists,jdbcType=VARCHAR}, 
      #{afnWarehouseQuantity,jdbcType=INTEGER}, #{afnFulfillableQuantity,jdbcType=INTEGER}, 
      #{afnUnsellableQuantity,jdbcType=INTEGER}, #{afnReservedQuantity,jdbcType=INTEGER}, 
      #{afnTotalQuantity,jdbcType=INTEGER}, #{perUnitVolume,jdbcType=INTEGER}, #{afnInboundWorkingQuantity,jdbcType=INTEGER}, 
      #{afnInboundShippedQuantity,jdbcType=INTEGER}, #{afnInboundReceivingQuantity,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddt.entity.FbaImport">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fba_import
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sku != null">
        sku,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopSkuId != null">
        shop_sku_id,
      </if>
      <if test="fnsku != null">
        fnsku,
      </if>
      <if test="asin != null">
        asin,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="conditions != null">
        conditions,
      </if>
      <if test="yourPrice != null">
        your_price,
      </if>
      <if test="mfnListingExists != null">
        mfn_listing_exists,
      </if>
      <if test="mfnFulfillableQuantity != null">
        mfn_fulfillable_quantity,
      </if>
      <if test="afnListingExists != null">
        afn_listing_exists,
      </if>
      <if test="afnWarehouseQuantity != null">
        afn_warehouse_quantity,
      </if>
      <if test="afnFulfillableQuantity != null">
        afn_fulfillable_quantity,
      </if>
      <if test="afnUnsellableQuantity != null">
        afn_unsellable_quantity,
      </if>
      <if test="afnReservedQuantity != null">
        afn_reserved_quantity,
      </if>
      <if test="afnTotalQuantity != null">
        afn_total_quantity,
      </if>
      <if test="perUnitVolume != null">
        per_unit_volume,
      </if>
      <if test="afnInboundWorkingQuantity != null">
        afn_inbound_working_quantity,
      </if>
      <if test="afnInboundShippedQuantity != null">
        afn_inbound_shipped_quantity,
      </if>
      <if test="afnInboundReceivingQuantity != null">
        afn_inbound_receiving_quantity,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sku != null">
        #{sku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopSkuId != null">
        #{shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="fnsku != null">
        #{fnsku,jdbcType=VARCHAR},
      </if>
      <if test="asin != null">
        #{asin,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="conditions != null">
        #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="yourPrice != null">
        #{yourPrice,jdbcType=DECIMAL},
      </if>
      <if test="mfnListingExists != null">
        #{mfnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="mfnFulfillableQuantity != null">
        #{mfnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnListingExists != null">
        #{afnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="afnWarehouseQuantity != null">
        #{afnWarehouseQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnFulfillableQuantity != null">
        #{afnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnUnsellableQuantity != null">
        #{afnUnsellableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnReservedQuantity != null">
        #{afnReservedQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnTotalQuantity != null">
        #{afnTotalQuantity,jdbcType=INTEGER},
      </if>
      <if test="perUnitVolume != null">
        #{perUnitVolume,jdbcType=INTEGER},
      </if>
      <if test="afnInboundWorkingQuantity != null">
        #{afnInboundWorkingQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnInboundShippedQuantity != null">
        #{afnInboundShippedQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnInboundReceivingQuantity != null">
        #{afnInboundReceivingQuantity,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddt.entity.FbaImportExample" resultType="java.lang.Long">
    select count(*) from fba_import
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fba_import
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sku != null">
        sku = #{record.sku,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopSkuId != null">
        shop_sku_id = #{record.shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="record.fnsku != null">
        fnsku = #{record.fnsku,jdbcType=VARCHAR},
      </if>
      <if test="record.asin != null">
        asin = #{record.asin,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.conditions != null">
        conditions = #{record.conditions,jdbcType=VARCHAR},
      </if>
      <if test="record.yourPrice != null">
        your_price = #{record.yourPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.mfnListingExists != null">
        mfn_listing_exists = #{record.mfnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="record.mfnFulfillableQuantity != null">
        mfn_fulfillable_quantity = #{record.mfnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnListingExists != null">
        afn_listing_exists = #{record.afnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="record.afnWarehouseQuantity != null">
        afn_warehouse_quantity = #{record.afnWarehouseQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnFulfillableQuantity != null">
        afn_fulfillable_quantity = #{record.afnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnUnsellableQuantity != null">
        afn_unsellable_quantity = #{record.afnUnsellableQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnReservedQuantity != null">
        afn_reserved_quantity = #{record.afnReservedQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnTotalQuantity != null">
        afn_total_quantity = #{record.afnTotalQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.perUnitVolume != null">
        per_unit_volume = #{record.perUnitVolume,jdbcType=INTEGER},
      </if>
      <if test="record.afnInboundWorkingQuantity != null">
        afn_inbound_working_quantity = #{record.afnInboundWorkingQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnInboundShippedQuantity != null">
        afn_inbound_shipped_quantity = #{record.afnInboundShippedQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.afnInboundReceivingQuantity != null">
        afn_inbound_receiving_quantity = #{record.afnInboundReceivingQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fba_import
    set id = #{record.id,jdbcType=INTEGER},
      sku = #{record.sku,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_sku_id = #{record.shopSkuId,jdbcType=INTEGER},
      fnsku = #{record.fnsku,jdbcType=VARCHAR},
      asin = #{record.asin,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      conditions = #{record.conditions,jdbcType=VARCHAR},
      your_price = #{record.yourPrice,jdbcType=DECIMAL},
      mfn_listing_exists = #{record.mfnListingExists,jdbcType=VARCHAR},
      mfn_fulfillable_quantity = #{record.mfnFulfillableQuantity,jdbcType=INTEGER},
      afn_listing_exists = #{record.afnListingExists,jdbcType=VARCHAR},
      afn_warehouse_quantity = #{record.afnWarehouseQuantity,jdbcType=INTEGER},
      afn_fulfillable_quantity = #{record.afnFulfillableQuantity,jdbcType=INTEGER},
      afn_unsellable_quantity = #{record.afnUnsellableQuantity,jdbcType=INTEGER},
      afn_reserved_quantity = #{record.afnReservedQuantity,jdbcType=INTEGER},
      afn_total_quantity = #{record.afnTotalQuantity,jdbcType=INTEGER},
      per_unit_volume = #{record.perUnitVolume,jdbcType=INTEGER},
      afn_inbound_working_quantity = #{record.afnInboundWorkingQuantity,jdbcType=INTEGER},
      afn_inbound_shipped_quantity = #{record.afnInboundShippedQuantity,jdbcType=INTEGER},
      afn_inbound_receiving_quantity = #{record.afnInboundReceivingQuantity,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddt.entity.FbaImport">
    update fba_import
    <set>
      <if test="sku != null">
        sku = #{sku,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopSkuId != null">
        shop_sku_id = #{shopSkuId,jdbcType=INTEGER},
      </if>
      <if test="fnsku != null">
        fnsku = #{fnsku,jdbcType=VARCHAR},
      </if>
      <if test="asin != null">
        asin = #{asin,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="conditions != null">
        conditions = #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="yourPrice != null">
        your_price = #{yourPrice,jdbcType=DECIMAL},
      </if>
      <if test="mfnListingExists != null">
        mfn_listing_exists = #{mfnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="mfnFulfillableQuantity != null">
        mfn_fulfillable_quantity = #{mfnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnListingExists != null">
        afn_listing_exists = #{afnListingExists,jdbcType=VARCHAR},
      </if>
      <if test="afnWarehouseQuantity != null">
        afn_warehouse_quantity = #{afnWarehouseQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnFulfillableQuantity != null">
        afn_fulfillable_quantity = #{afnFulfillableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnUnsellableQuantity != null">
        afn_unsellable_quantity = #{afnUnsellableQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnReservedQuantity != null">
        afn_reserved_quantity = #{afnReservedQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnTotalQuantity != null">
        afn_total_quantity = #{afnTotalQuantity,jdbcType=INTEGER},
      </if>
      <if test="perUnitVolume != null">
        per_unit_volume = #{perUnitVolume,jdbcType=INTEGER},
      </if>
      <if test="afnInboundWorkingQuantity != null">
        afn_inbound_working_quantity = #{afnInboundWorkingQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnInboundShippedQuantity != null">
        afn_inbound_shipped_quantity = #{afnInboundShippedQuantity,jdbcType=INTEGER},
      </if>
      <if test="afnInboundReceivingQuantity != null">
        afn_inbound_receiving_quantity = #{afnInboundReceivingQuantity,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddt.entity.FbaImport">
    update fba_import
    set sku = #{sku,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER},
      shop_sku_id = #{shopSkuId,jdbcType=INTEGER},
      fnsku = #{fnsku,jdbcType=VARCHAR},
      asin = #{asin,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      conditions = #{conditions,jdbcType=VARCHAR},
      your_price = #{yourPrice,jdbcType=DECIMAL},
      mfn_listing_exists = #{mfnListingExists,jdbcType=VARCHAR},
      mfn_fulfillable_quantity = #{mfnFulfillableQuantity,jdbcType=INTEGER},
      afn_listing_exists = #{afnListingExists,jdbcType=VARCHAR},
      afn_warehouse_quantity = #{afnWarehouseQuantity,jdbcType=INTEGER},
      afn_fulfillable_quantity = #{afnFulfillableQuantity,jdbcType=INTEGER},
      afn_unsellable_quantity = #{afnUnsellableQuantity,jdbcType=INTEGER},
      afn_reserved_quantity = #{afnReservedQuantity,jdbcType=INTEGER},
      afn_total_quantity = #{afnTotalQuantity,jdbcType=INTEGER},
      per_unit_volume = #{perUnitVolume,jdbcType=INTEGER},
      afn_inbound_working_quantity = #{afnInboundWorkingQuantity,jdbcType=INTEGER},
      afn_inbound_shipped_quantity = #{afnInboundShippedQuantity,jdbcType=INTEGER},
      afn_inbound_receiving_quantity = #{afnInboundReceivingQuantity,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>