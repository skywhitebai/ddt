<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddt.dao.generate.InternalOrderNumberMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddt.entity.InternalOrderNumber">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="theoretical_amount" jdbcType="DECIMAL" property="theoreticalAmount" />
    <result column="theoretical_amount_status" jdbcType="INTEGER" property="theoreticalAmountStatus" />
    <result column="estimated_arrival_time" jdbcType="DATE" property="estimatedArrivalTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="transport_type_id" jdbcType="INTEGER" property="transportTypeId" />
    <result column="financial_remark" jdbcType="VARCHAR" property="financialRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_number, number, pay_amount, theoretical_amount, theoretical_amount_status, 
    estimated_arrival_time, remark, create_time, create_by, update_time, update_by, transport_type_id, 
    financial_remark
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddt.entity.InternalOrderNumberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from internal_order_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from internal_order_number
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from internal_order_number
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddt.entity.InternalOrderNumberExample">
    delete from internal_order_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddt.entity.InternalOrderNumber">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into internal_order_number (order_number, number, pay_amount, 
      theoretical_amount, theoretical_amount_status, 
      estimated_arrival_time, remark, create_time, 
      create_by, update_time, update_by, 
      transport_type_id, financial_remark)
    values (#{orderNumber,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, 
      #{theoreticalAmount,jdbcType=DECIMAL}, #{theoreticalAmountStatus,jdbcType=INTEGER}, 
      #{estimatedArrivalTime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{transportTypeId,jdbcType=INTEGER}, #{financialRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddt.entity.InternalOrderNumber">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into internal_order_number
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="theoreticalAmount != null">
        theoretical_amount,
      </if>
      <if test="theoreticalAmountStatus != null">
        theoretical_amount_status,
      </if>
      <if test="estimatedArrivalTime != null">
        estimated_arrival_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="transportTypeId != null">
        transport_type_id,
      </if>
      <if test="financialRemark != null">
        financial_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="theoreticalAmount != null">
        #{theoreticalAmount,jdbcType=DECIMAL},
      </if>
      <if test="theoreticalAmountStatus != null">
        #{theoreticalAmountStatus,jdbcType=INTEGER},
      </if>
      <if test="estimatedArrivalTime != null">
        #{estimatedArrivalTime,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="transportTypeId != null">
        #{transportTypeId,jdbcType=INTEGER},
      </if>
      <if test="financialRemark != null">
        #{financialRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddt.entity.InternalOrderNumberExample" resultType="java.lang.Long">
    select count(*) from internal_order_number
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update internal_order_number
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.theoreticalAmount != null">
        theoretical_amount = #{record.theoreticalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.theoreticalAmountStatus != null">
        theoretical_amount_status = #{record.theoreticalAmountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.estimatedArrivalTime != null">
        estimated_arrival_time = #{record.estimatedArrivalTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.transportTypeId != null">
        transport_type_id = #{record.transportTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.financialRemark != null">
        financial_remark = #{record.financialRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update internal_order_number
    set id = #{record.id,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      theoretical_amount = #{record.theoreticalAmount,jdbcType=DECIMAL},
      theoretical_amount_status = #{record.theoreticalAmountStatus,jdbcType=INTEGER},
      estimated_arrival_time = #{record.estimatedArrivalTime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      transport_type_id = #{record.transportTypeId,jdbcType=INTEGER},
      financial_remark = #{record.financialRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddt.entity.InternalOrderNumber">
    update internal_order_number
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="theoreticalAmount != null">
        theoretical_amount = #{theoreticalAmount,jdbcType=DECIMAL},
      </if>
      <if test="theoreticalAmountStatus != null">
        theoretical_amount_status = #{theoreticalAmountStatus,jdbcType=INTEGER},
      </if>
      <if test="estimatedArrivalTime != null">
        estimated_arrival_time = #{estimatedArrivalTime,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="transportTypeId != null">
        transport_type_id = #{transportTypeId,jdbcType=INTEGER},
      </if>
      <if test="financialRemark != null">
        financial_remark = #{financialRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddt.entity.InternalOrderNumber">
    update internal_order_number
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      theoretical_amount = #{theoreticalAmount,jdbcType=DECIMAL},
      theoretical_amount_status = #{theoreticalAmountStatus,jdbcType=INTEGER},
      estimated_arrival_time = #{estimatedArrivalTime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      transport_type_id = #{transportTypeId,jdbcType=INTEGER},
      financial_remark = #{financialRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>