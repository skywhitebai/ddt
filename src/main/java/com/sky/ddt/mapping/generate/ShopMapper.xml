<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddt.dao.generate.ShopMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddt.entity.Shop">
    <id column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="shop_url" jdbcType="VARCHAR" property="shopUrl" />
    <result column="seller_id" jdbcType="VARCHAR" property="sellerId" />
    <result column="country_id" jdbcType="INTEGER" property="countryId" />
    <result column="shop_marketplace_id" jdbcType="VARCHAR" property="shopMarketplaceId" />
    <result column="mws_auth_token" jdbcType="VARCHAR" property="mwsAuthToken" />
    <result column="amazon_access_key" jdbcType="VARCHAR" property="amazonAccessKey" />
    <result column="amazon_secret_key" jdbcType="VARCHAR" property="amazonSecretKey" />
    <result column="client_ip" jdbcType="VARCHAR" property="clientIp" />
    <result column="client_mac_address" jdbcType="VARCHAR" property="clientMacAddress" />
    <result column="order_last_updated_after" jdbcType="TIMESTAMP" property="orderLastUpdatedAfter" />
    <result column="inventory_query_start_date_time" jdbcType="TIMESTAMP" property="inventoryQueryStartDateTime" />
    <result column="order_syn_quantity" jdbcType="INTEGER" property="orderSynQuantity" />
    <result column="order_syn_interval_minute" jdbcType="INTEGER" property="orderSynIntervalMinute" />
    <result column="inventory_syn_interval_minute" jdbcType="INTEGER" property="inventorySynIntervalMinute" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shop_id, shop_name, shop_url, seller_id, country_id, shop_marketplace_id, mws_auth_token, 
    amazon_access_key, amazon_secret_key, client_ip, client_mac_address, order_last_updated_after, 
    inventory_query_start_date_time, order_syn_quantity, order_syn_interval_minute, inventory_syn_interval_minute, 
    status, type, remark, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddt.entity.ShopExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddt.entity.ShopExample">
    delete from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddt.entity.Shop">
    insert into shop (shop_id, shop_name, shop_url, 
      seller_id, country_id, shop_marketplace_id, 
      mws_auth_token, amazon_access_key, amazon_secret_key, 
      client_ip, client_mac_address, order_last_updated_after, 
      inventory_query_start_date_time, order_syn_quantity, 
      order_syn_interval_minute, inventory_syn_interval_minute, 
      status, type, remark, create_time, 
      create_by, update_time, update_by
      )
    values (#{shopId,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}, #{shopUrl,jdbcType=VARCHAR}, 
      #{sellerId,jdbcType=VARCHAR}, #{countryId,jdbcType=INTEGER}, #{shopMarketplaceId,jdbcType=VARCHAR}, 
      #{mwsAuthToken,jdbcType=VARCHAR}, #{amazonAccessKey,jdbcType=VARCHAR}, #{amazonSecretKey,jdbcType=VARCHAR}, 
      #{clientIp,jdbcType=VARCHAR}, #{clientMacAddress,jdbcType=VARCHAR}, #{orderLastUpdatedAfter,jdbcType=TIMESTAMP}, 
      #{inventoryQueryStartDateTime,jdbcType=TIMESTAMP}, #{orderSynQuantity,jdbcType=INTEGER}, 
      #{orderSynIntervalMinute,jdbcType=INTEGER}, #{inventorySynIntervalMinute,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{type,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddt.entity.Shop">
    insert into shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="shopUrl != null">
        shop_url,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="countryId != null">
        country_id,
      </if>
      <if test="shopMarketplaceId != null">
        shop_marketplace_id,
      </if>
      <if test="mwsAuthToken != null">
        mws_auth_token,
      </if>
      <if test="amazonAccessKey != null">
        amazon_access_key,
      </if>
      <if test="amazonSecretKey != null">
        amazon_secret_key,
      </if>
      <if test="clientIp != null">
        client_ip,
      </if>
      <if test="clientMacAddress != null">
        client_mac_address,
      </if>
      <if test="orderLastUpdatedAfter != null">
        order_last_updated_after,
      </if>
      <if test="inventoryQueryStartDateTime != null">
        inventory_query_start_date_time,
      </if>
      <if test="orderSynQuantity != null">
        order_syn_quantity,
      </if>
      <if test="orderSynIntervalMinute != null">
        order_syn_interval_minute,
      </if>
      <if test="inventorySynIntervalMinute != null">
        inventory_syn_interval_minute,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopUrl != null">
        #{shopUrl,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="countryId != null">
        #{countryId,jdbcType=INTEGER},
      </if>
      <if test="shopMarketplaceId != null">
        #{shopMarketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="mwsAuthToken != null">
        #{mwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="amazonAccessKey != null">
        #{amazonAccessKey,jdbcType=VARCHAR},
      </if>
      <if test="amazonSecretKey != null">
        #{amazonSecretKey,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null">
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="clientMacAddress != null">
        #{clientMacAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderLastUpdatedAfter != null">
        #{orderLastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="inventoryQueryStartDateTime != null">
        #{inventoryQueryStartDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderSynQuantity != null">
        #{orderSynQuantity,jdbcType=INTEGER},
      </if>
      <if test="orderSynIntervalMinute != null">
        #{orderSynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="inventorySynIntervalMinute != null">
        #{inventorySynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddt.entity.ShopExample" resultType="java.lang.Long">
    select count(*) from shop
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop
    <set>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopUrl != null">
        shop_url = #{record.shopUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
      <if test="record.countryId != null">
        country_id = #{record.countryId,jdbcType=INTEGER},
      </if>
      <if test="record.shopMarketplaceId != null">
        shop_marketplace_id = #{record.shopMarketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="record.mwsAuthToken != null">
        mws_auth_token = #{record.mwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="record.amazonAccessKey != null">
        amazon_access_key = #{record.amazonAccessKey,jdbcType=VARCHAR},
      </if>
      <if test="record.amazonSecretKey != null">
        amazon_secret_key = #{record.amazonSecretKey,jdbcType=VARCHAR},
      </if>
      <if test="record.clientIp != null">
        client_ip = #{record.clientIp,jdbcType=VARCHAR},
      </if>
      <if test="record.clientMacAddress != null">
        client_mac_address = #{record.clientMacAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.orderLastUpdatedAfter != null">
        order_last_updated_after = #{record.orderLastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inventoryQueryStartDateTime != null">
        inventory_query_start_date_time = #{record.inventoryQueryStartDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderSynQuantity != null">
        order_syn_quantity = #{record.orderSynQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.orderSynIntervalMinute != null">
        order_syn_interval_minute = #{record.orderSynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="record.inventorySynIntervalMinute != null">
        inventory_syn_interval_minute = #{record.inventorySynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop
    set shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      shop_url = #{record.shopUrl,jdbcType=VARCHAR},
      seller_id = #{record.sellerId,jdbcType=VARCHAR},
      country_id = #{record.countryId,jdbcType=INTEGER},
      shop_marketplace_id = #{record.shopMarketplaceId,jdbcType=VARCHAR},
      mws_auth_token = #{record.mwsAuthToken,jdbcType=VARCHAR},
      amazon_access_key = #{record.amazonAccessKey,jdbcType=VARCHAR},
      amazon_secret_key = #{record.amazonSecretKey,jdbcType=VARCHAR},
      client_ip = #{record.clientIp,jdbcType=VARCHAR},
      client_mac_address = #{record.clientMacAddress,jdbcType=VARCHAR},
      order_last_updated_after = #{record.orderLastUpdatedAfter,jdbcType=TIMESTAMP},
      inventory_query_start_date_time = #{record.inventoryQueryStartDateTime,jdbcType=TIMESTAMP},
      order_syn_quantity = #{record.orderSynQuantity,jdbcType=INTEGER},
      order_syn_interval_minute = #{record.orderSynIntervalMinute,jdbcType=INTEGER},
      inventory_syn_interval_minute = #{record.inventorySynIntervalMinute,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      type = #{record.type,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddt.entity.Shop">
    update shop
    <set>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopUrl != null">
        shop_url = #{shopUrl,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="countryId != null">
        country_id = #{countryId,jdbcType=INTEGER},
      </if>
      <if test="shopMarketplaceId != null">
        shop_marketplace_id = #{shopMarketplaceId,jdbcType=VARCHAR},
      </if>
      <if test="mwsAuthToken != null">
        mws_auth_token = #{mwsAuthToken,jdbcType=VARCHAR},
      </if>
      <if test="amazonAccessKey != null">
        amazon_access_key = #{amazonAccessKey,jdbcType=VARCHAR},
      </if>
      <if test="amazonSecretKey != null">
        amazon_secret_key = #{amazonSecretKey,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null">
        client_ip = #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="clientMacAddress != null">
        client_mac_address = #{clientMacAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderLastUpdatedAfter != null">
        order_last_updated_after = #{orderLastUpdatedAfter,jdbcType=TIMESTAMP},
      </if>
      <if test="inventoryQueryStartDateTime != null">
        inventory_query_start_date_time = #{inventoryQueryStartDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderSynQuantity != null">
        order_syn_quantity = #{orderSynQuantity,jdbcType=INTEGER},
      </if>
      <if test="orderSynIntervalMinute != null">
        order_syn_interval_minute = #{orderSynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="inventorySynIntervalMinute != null">
        inventory_syn_interval_minute = #{inventorySynIntervalMinute,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddt.entity.Shop">
    update shop
    set shop_name = #{shopName,jdbcType=VARCHAR},
      shop_url = #{shopUrl,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      country_id = #{countryId,jdbcType=INTEGER},
      shop_marketplace_id = #{shopMarketplaceId,jdbcType=VARCHAR},
      mws_auth_token = #{mwsAuthToken,jdbcType=VARCHAR},
      amazon_access_key = #{amazonAccessKey,jdbcType=VARCHAR},
      amazon_secret_key = #{amazonSecretKey,jdbcType=VARCHAR},
      client_ip = #{clientIp,jdbcType=VARCHAR},
      client_mac_address = #{clientMacAddress,jdbcType=VARCHAR},
      order_last_updated_after = #{orderLastUpdatedAfter,jdbcType=TIMESTAMP},
      inventory_query_start_date_time = #{inventoryQueryStartDateTime,jdbcType=TIMESTAMP},
      order_syn_quantity = #{orderSynQuantity,jdbcType=INTEGER},
      order_syn_interval_minute = #{orderSynIntervalMinute,jdbcType=INTEGER},
      inventory_syn_interval_minute = #{inventorySynIntervalMinute,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      type = #{type,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
</mapper>