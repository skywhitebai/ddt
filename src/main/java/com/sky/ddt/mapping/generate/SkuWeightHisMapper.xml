<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.ddt.dao.generate.SkuWeightHisMapper">
  <resultMap id="BaseResultMap" type="com.sky.ddt.entity.SkuWeightHis">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="weight_before" jdbcType="DECIMAL" property="weightBefore" />
    <result column="weight_after" jdbcType="DECIMAL" property="weightAfter" />
    <result column="head_trip_cost_before" jdbcType="DECIMAL" property="headTripCostBefore" />
    <result column="head_trip_cost_after" jdbcType="DECIMAL" property="headTripCostAfter" />
    <result column="head_trip_cost_min_before" jdbcType="DECIMAL" property="headTripCostMinBefore" />
    <result column="head_trip_cost_min_after" jdbcType="DECIMAL" property="headTripCostMinAfter" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku_id, weight_before, weight_after, head_trip_cost_before, head_trip_cost_after, 
    head_trip_cost_min_before, head_trip_cost_min_after, type, create_by, create_time
  </sql>
  <select id="selectByExample" parameterType="com.sky.ddt.entity.SkuWeightHisExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sku_weight_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sku_weight_his
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sku_weight_his
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sky.ddt.entity.SkuWeightHisExample">
    delete from sku_weight_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sky.ddt.entity.SkuWeightHis">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sku_weight_his (sku_id, weight_before, weight_after, 
      head_trip_cost_before, head_trip_cost_after, 
      head_trip_cost_min_before, head_trip_cost_min_after, 
      type, create_by, create_time
      )
    values (#{skuId,jdbcType=INTEGER}, #{weightBefore,jdbcType=DECIMAL}, #{weightAfter,jdbcType=DECIMAL}, 
      #{headTripCostBefore,jdbcType=DECIMAL}, #{headTripCostAfter,jdbcType=DECIMAL}, 
      #{headTripCostMinBefore,jdbcType=DECIMAL}, #{headTripCostMinAfter,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sky.ddt.entity.SkuWeightHis">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sku_weight_his
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="weightBefore != null">
        weight_before,
      </if>
      <if test="weightAfter != null">
        weight_after,
      </if>
      <if test="headTripCostBefore != null">
        head_trip_cost_before,
      </if>
      <if test="headTripCostAfter != null">
        head_trip_cost_after,
      </if>
      <if test="headTripCostMinBefore != null">
        head_trip_cost_min_before,
      </if>
      <if test="headTripCostMinAfter != null">
        head_trip_cost_min_after,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="weightBefore != null">
        #{weightBefore,jdbcType=DECIMAL},
      </if>
      <if test="weightAfter != null">
        #{weightAfter,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostBefore != null">
        #{headTripCostBefore,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostAfter != null">
        #{headTripCostAfter,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostMinBefore != null">
        #{headTripCostMinBefore,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostMinAfter != null">
        #{headTripCostMinAfter,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sky.ddt.entity.SkuWeightHisExample" resultType="java.lang.Long">
    select count(*) from sku_weight_his
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sku_weight_his
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.weightBefore != null">
        weight_before = #{record.weightBefore,jdbcType=DECIMAL},
      </if>
      <if test="record.weightAfter != null">
        weight_after = #{record.weightAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.headTripCostBefore != null">
        head_trip_cost_before = #{record.headTripCostBefore,jdbcType=DECIMAL},
      </if>
      <if test="record.headTripCostAfter != null">
        head_trip_cost_after = #{record.headTripCostAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.headTripCostMinBefore != null">
        head_trip_cost_min_before = #{record.headTripCostMinBefore,jdbcType=DECIMAL},
      </if>
      <if test="record.headTripCostMinAfter != null">
        head_trip_cost_min_after = #{record.headTripCostMinAfter,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sku_weight_his
    set id = #{record.id,jdbcType=INTEGER},
      sku_id = #{record.skuId,jdbcType=INTEGER},
      weight_before = #{record.weightBefore,jdbcType=DECIMAL},
      weight_after = #{record.weightAfter,jdbcType=DECIMAL},
      head_trip_cost_before = #{record.headTripCostBefore,jdbcType=DECIMAL},
      head_trip_cost_after = #{record.headTripCostAfter,jdbcType=DECIMAL},
      head_trip_cost_min_before = #{record.headTripCostMinBefore,jdbcType=DECIMAL},
      head_trip_cost_min_after = #{record.headTripCostMinAfter,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sky.ddt.entity.SkuWeightHis">
    update sku_weight_his
    <set>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="weightBefore != null">
        weight_before = #{weightBefore,jdbcType=DECIMAL},
      </if>
      <if test="weightAfter != null">
        weight_after = #{weightAfter,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostBefore != null">
        head_trip_cost_before = #{headTripCostBefore,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostAfter != null">
        head_trip_cost_after = #{headTripCostAfter,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostMinBefore != null">
        head_trip_cost_min_before = #{headTripCostMinBefore,jdbcType=DECIMAL},
      </if>
      <if test="headTripCostMinAfter != null">
        head_trip_cost_min_after = #{headTripCostMinAfter,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sky.ddt.entity.SkuWeightHis">
    update sku_weight_his
    set sku_id = #{skuId,jdbcType=INTEGER},
      weight_before = #{weightBefore,jdbcType=DECIMAL},
      weight_after = #{weightAfter,jdbcType=DECIMAL},
      head_trip_cost_before = #{headTripCostBefore,jdbcType=DECIMAL},
      head_trip_cost_after = #{headTripCostAfter,jdbcType=DECIMAL},
      head_trip_cost_min_before = #{headTripCostMinBefore,jdbcType=DECIMAL},
      head_trip_cost_min_after = #{headTripCostMinAfter,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>